<?xml version="1.0" encoding="utf-8"?>
<s:Application
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/halo"
	xmlns:ivt="com.ivt.flex.controls.*">

	<s:layout>
		<s:VerticalLayout gap="10" horizontalAlign="center"/>
	</s:layout>

	<fx:Script>
		<![CDATA[

		import mx.collections.ArrayCollection;

		private var dataProvider:ArrayCollection = new ArrayCollection( [ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten' ] );

		private function performFilter( filterText:String ):void
		{
			dataProvider.filterFunction =
				function ( item:String ):Boolean
				{
					return ( item.toLowerCase().indexOf( filterText.toLowerCase() ) !== -1 );
				};
			dataProvider.refresh();
		}

		]]>
	</fx:Script>

	<s:Label width="{inputList.width}">
		<s:text>
Enter text into both the filters and notice that the delayed one will wait longer before performing the filter.
		</s:text>
	</s:Label>

	<!-- This list will be filtered by the performFilter function, either immediately after the Instance filter has
		been modified, or after a certain amount of time if the Delayed filter has changed (specified by inputDelayAmount)
		-->
	<s:List
		id="inputList"
		dataProvider="{ this.dataProvider }" />

	<mx:Form>

		<mx:FormItem label="Instant filter">

			<!-- Immediately after every change in the text, we will filter the list -->
			<s:TextInput
				id="inputInstantFilter"
				change="this.performFilter( this.inputInstantFilter.text )"/>

		</mx:FormItem>

		<mx:FormItem label="Delayed filter">

			<!-- Wait for {inputDelayAmount.value} milliseconds after every change in the text before we filter the list -->
			<ivt:TextInput
				id="inputDelayedFilter"
				delay="{this.inputDelayAmount.value}"
				delayedChange="this.performFilter( this.inputDelayedFilter.text )"/>

			<s:NumericStepper id="inputDelayAmount" value="500" />

		</mx:FormItem>

	</mx:Form>

</s:Application>
